
# We use it to define the GH event type and get the PR number, when applicable.
# If $DRY_RUN_MODE is set to false, the action will try to manipulate the PR. So, you may want to set it to a real PR number.
GITHUB_REF=refs/pull/1/merge

# Not relevant to the test, but needed for the action to run.
GITHUB_SHA=7f94e0b2a58d1c36f9d08e742cb5a1e3f5d78b29

# Repository information
GITHUB_REPOSITORY_OWNER=<org>
GITHUB_REPOSITORY=<org>/<repository_name>

# Folder that contains the directory defined in the $INPUT_MANIFEST_DIR variable (generally, kubernetes) as subfolder, which contains the manifests you want to test the action with.
GITHUB_WORKSPACE=../action_tests/<repository_name>

# Folder where the action will deploy the manifests to. The action will create deployment files in this directory.
DEPLOYMENT_DIR=../.deploy

# Folder that contains the additional templates used by the action.
# Generally, you don't need to change this.
TEMPLATES_DIR=./templates

# If it's set to true, the action will not deploy anything to the cluster. It will only generate the deployment files.
# This is useful for testing the action without deploying anything.
# Be careful with setting this to false, as it will deploy the manifests to the environments defined in the $INPUT_K8S_ENVS variable.
DRY_RUN_MODE=true

# Action inputs. See action.yml for more information.
INPUT_K8S_ENVS="dev\ninfra\n"
INPUT_REPO_TOKEN="<GitHub PAT with manage comments permission on test repository>"
INPUT_GITOPS_TOKEN="<GitHub PAT with read permission on gitOps repository>"
INPUT_MANIFEST_DIR="kubernetes"
INPUT_STRATEGY="none"

# Base64 encoded kubeconfig for the environments defined in INPUT_K8S_ENVS.
# See https://github.com/MP-ES/k8s-deploy?tab=readme-ov-file#kubeconfig-example.
base64_kubeconfig_dev="<base64_encoded_kubeconfig_dev>"
base64_kubeconfig_infra="<base64_encoded_kubeconfig_infra>"

# Project specific variables
project_var_1="value_1"
project_var_2="value_2"
project_var_3="value_3"
